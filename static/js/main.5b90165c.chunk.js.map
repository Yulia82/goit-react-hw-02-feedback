{"version":3,"sources":["components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.js","components/SectionTitle/SectionTitle.styles.jsx","components/SectionTitle/SectionTitle.js","components/Notification/Notification.styles.jsx","components/Notification/Notification.js","components/Wrapper/Wrapper.styles.jsx","components/App/App.js","index.js"],"names":["ItemStatistic","styled","li","ListStatistic","ul","ValueStatistic","span","Statistics","stateObj","total","positivePercentage","Object","keys","map","property","values","ContainerBtn","div","Btn","button","FeedbackOptions","options","onLeaveFeedback","option","name","type","onClick","TitleSection","h2","SectionTitle","title","children","Notif","p","Notification","message","Wrapper","App","state","good","neutral","bad","evt","setState","prevState","target","countTotalFeedback","arr","reduce","sum","current","countPositiveFeedbackPercentage","percent","Math","round","this","getStatistic","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAgBC,IAAOC,GAAV,+CAIbC,EAAgBF,IAAOG,GAAV,uEAKbC,EAAiBJ,IAAOK,KAAV,kG,OCeZC,EAvBI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACnC,OACI,eAACP,EAAD,WACKQ,OAAOC,KAAKJ,GAAUK,KAAI,SAAAC,GAAQ,OAC/B,eAACd,EAAD,WACI,cAACK,EAAD,UACKS,IAEJN,EAAS,GAAD,OAAIM,MAJGA,MAOxB,eAACd,EAAD,WAA2B,cAACK,EAAD,qBAAwCI,EAAME,OAAOI,OAAOP,MAApE,SACvB,eAACR,EAAD,WAAwC,cAACK,EAAD,iCAAoDK,MAAzE,0BCbdM,EAAef,IAAOgB,IAAV,8EAMZC,EAAMjB,IAAOkB,OAAV,2WCgBDC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,cAACN,EAAD,UACKK,EAAQR,KAAI,SAAAU,GAAM,OACf,cAACL,EAAD,CACIM,KAAMD,EACNE,KAAK,SACLC,QAASJ,EAHb,SAIKC,GAJKA,SCLbI,EAAe1B,IAAO2B,GAAV,4FCeVC,EAdM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3B,OACI,oCACI,cAACJ,EAAD,UAAeG,IACdC,MCLAC,EAAQ/B,IAAOgC,EAAV,iICWHC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,cAACH,EAAD,UAAQG,KCHHC,EAAUnC,IAAOgB,IAAV,wJCsDLoB,E,4MAhDXC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGRnB,gBAAkB,SAACoB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAAIG,OAAOrB,KAAOoB,EAAU,GAAD,OAAIF,EAAIG,OAAOrB,OAAU,O,EAK7DsB,mBAAqB,SAACC,GAClB,OAAOA,EAAIC,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,IAAS,I,EAGvDC,gCAAkC,WAC9B,IAAMC,EAAUC,KAAKC,MAAwB,IAAlB,EAAKhB,MAAMC,KAAa,EAAKO,mBAAmBnC,OAAOI,OAAO,EAAKuB,SAC9F,MAAM,GAAN,OAAWc,EAAX,M,kDAGJ,WACI,OAA2D,IAAvDG,KAAKT,mBAAmBnC,OAAOI,OAAOwC,KAAKjB,U,oBAOnD,WACI,OACI,eAACF,EAAD,WACI,cAAC,EAAD,CAAcN,MAAM,wBAApB,SACI,cAAC,EAAD,CAAiBT,QAASV,OAAOC,KAAK2C,KAAKjB,OAAQhB,gBAAkBiC,KAAKjC,oBAG9E,cAAC,EAAD,CAAcQ,MAAM,YAApB,SACKyB,KAAKC,eACF,cAAC,EAAD,CAAYhD,SAAU+C,KAAKjB,MAAO7B,MAAO8C,KAAKT,mBAAoBpC,mBAAoB6C,KAAKJ,kCACzF,cAAC,EAAD,CAAchB,QAAQ,+B,GAzC9BsB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5b90165c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ItemStatistic = styled.li`\r\nmargin-top: 10px;\r\n`;\r\n\r\nexport const ListStatistic = styled.ul`\r\nmargin-top: 10px;\r\npadding: 0px 20px 20px\r\n`;\r\n\r\nexport const ValueStatistic = styled.span`\r\nmargin-right: 10px;\r\nfont-weight: bold;\r\ntext-transform: capitalize;\r\n`;","import { ItemStatistic, ListStatistic, ValueStatistic } from './Statistics.styled'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ stateObj, total, positivePercentage }) => {\r\n    return (\r\n        <ListStatistic>\r\n            {Object.keys(stateObj).map(property => (\r\n                <ItemStatistic key={property}>\r\n                    <ValueStatistic>\r\n                        {property}\r\n                    </ValueStatistic>\r\n                    {stateObj[`${property}`]}\r\n                </ItemStatistic>\r\n            ))}\r\n            <ItemStatistic key=\"total\"><ValueStatistic>Total:</ValueStatistic>{total(Object.values(stateObj))}</ItemStatistic>\r\n        <ItemStatistic key=\"positivePercentage\"><ValueStatistic>Positive feedback:</ValueStatistic>{positivePercentage()}</ItemStatistic>\r\n    </ListStatistic>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    stateObj:PropTypes.object.isRequired,\r\n    total: PropTypes.func.isRequired,\r\n    positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;","import styled from \"@emotion/styled\";\r\n\r\nexport const ContainerBtn = styled.div`\r\ndisplay: flex;\r\njustify-content: space-around;\r\n\r\n`;\r\n\r\nexport const Btn = styled.button`\r\nmin-width: 90px;\r\npadding: 4px 20px;\r\nborder-radius: 5px;\r\nborder: none;\r\nbackground-color: #ffffff;\r\nbox-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\r\n0px 2px 2px rgba(0, 0, 0, 0.12);\r\n\r\nfont-weight: bold;\r\ncursor: pointer;\r\n\r\n&:hover,\r\n&:focus {\r\n    background-color: #7AB7F4;\r\n    color: #ffffff;\r\n  }\r\n`;","import { Btn, ContainerBtn } from './FeedbackOptions.styles'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <ContainerBtn>\r\n            {options.map(option => (\r\n                <Btn key={option}\r\n                    name={option}\r\n                    type=\"button\"\r\n                    onClick={onLeaveFeedback}>\r\n                    {option}\r\n                </Btn>\r\n            )\r\n            )}\r\n        </ContainerBtn>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const TitleSection = styled.h2`\r\nfont-weight: bold;\r\ntext-align: center;\r\n\r\npadding: 10px 20px;\r\n`;\r\n\r\n","import {TitleSection} from './SectionTitle.styles'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SectionTitle = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <TitleSection>{title}</TitleSection>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default SectionTitle;","import styled from \"@emotion/styled\";\r\n\r\nexport const Notif = styled.p`\r\nfont-weight: bold;\r\nfont-size: 20px;\r\ntext-align: center;\r\ncolor: #4C4C4C;\r\n\r\npadding-bottom: 20px;\r\n`;\r\n\r\n","import { Notif } from './Notification.styles'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <Notif>{message}</Notif>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\nwidth: 350px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\n\r\nbackground-color: rgba(238,238, 238, 0.8);\r\nborder-radius: 10px;\r\n`;","import { Component } from 'react'\r\nimport Statistics from '../Statistics'\r\nimport FeedbackOptions from '../FeedbackOptions'\r\nimport SectionTitle from '../SectionTitle'\r\nimport Notification from '../Notification'\r\nimport { Wrapper } from '../Wrapper/Wrapper.styles'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n    \r\n     onLeaveFeedback = (evt) => {\r\n        this.setState(prevState => ({\r\n            [evt.target.name]: prevState[`${evt.target.name}`] + 1,\r\n        })\r\n        )\r\n    };\r\n\r\n    countTotalFeedback = (arr) => {\r\n        return arr.reduce((sum, current) => sum + current, 0);\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const percent = Math.round(this.state.good * 100 / this.countTotalFeedback(Object.values(this.state)));\r\n        return (`${percent}%`);\r\n    }\r\n\r\n    getStatistic() {\r\n        if (this.countTotalFeedback(Object.values(this.state)) === 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <SectionTitle title='Please leave feedback'>\r\n                    <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={ this.onLeaveFeedback }/>\r\n                </SectionTitle>\r\n\r\n                <SectionTitle title='Statistic'>\r\n                    {this.getStatistic() ? \r\n                        <Statistics stateObj={this.state} total={this.countTotalFeedback} positivePercentage={this.countPositiveFeedbackPercentage} />\r\n                        : <Notification message=\"No feedback given\"/> \r\n                    }\r\n                </SectionTitle>\r\n            </Wrapper>\r\n        )\r\n    };\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}